-- install JSON server --
npx json-server --port 3001 --watch db.json

npm install axios

-- Install json-server as a development dependency (only used during development) --
npm install json-server --save-dev

to package.json -> "server": "json-server -p3001 --watch db.json"

npm run server




-- create a new template for application --
npm init

node index.js //run app 


-- express --
npm install express

-- nodemon --
npm install --save-dev nodemon

node_modules/.bin/nodemon index.js //start app with nodemon
npm run dev //after adding "dev": "nodemon index.js", script to package.json

-- postman --
https://www.postman.com/downloads/
https://marketplace.visualstudio.com/items?itemName=humao.rest-client

overriding default NOT FOUND message for http status (404)
https://stackoverflow.com/questions/14154337/how-to-send-a-custom-http-status-message-in-node-express/36507614#36507614


-- cors -- 
npm install cors

https://fullstackopen-notes-fglsn.herokuapp.com/

== heroku subtree ==
https://dev.to/crrojas88/deploying-a-git-subdirectory-to-heroku-23ld
git subtree push --prefix part03/phonebook-back heroku main

npm install mongoose

== phonebook: ==
heroku git:remote -a fullstackopen-phonebook-fglsn
heroku config:set MONGODB_URI="mongodb+srv://<username>:<password>@cluster0.rxxdbit.mongodb.net/phonebookApp?retryWrites=true&w=majority"
git subtree push --prefix part03/phonebook-back heroku main


== notes == 
heroku git:remote -a fullstackopen-notes-fglsn
heroku config:set MONGODB_URI="mongodb+srv://<username>:<password>@cluster0.yitvnyc.mongodb.net/noteApp?retryWrites=true&w=majority"
git subtree push --prefix theory/part3 heroku main

== ESlint ==

npm install eslint --save-dev
npx eslint --init

to package.json scripts section:
	"lint": "eslint .",
	"lint:fix": "npx eslint . --fix"



testing lib
== jest ==

	npm install --save-dev jest

into to scripts of package.json : 
	"test": "jest --verbose"

to the end of package.json :
	"jest": {
	"testEnvironment": "node"
	}

to "env" section of eslintrc.js : 
	'jest': true,

(** to run one test, use for.ex : 
	npm test -- tests/blog_api.test.js)

== supertest ==
npm install --save-dev supertest

==  express-async-errors library ==

npm install express-async-errors

into app.js add : require('express-async-errors')

